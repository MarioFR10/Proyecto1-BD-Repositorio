//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto1_BD.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities1 : DbContext
    {
        public Entities1()
            : base("name=Entities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountStatement> AccountStatements { get; set; }
        public virtual DbSet<Benefactor> Benefactors { get; set; }
        public virtual DbSet<Coin> Coins { get; set; }
        public virtual DbSet<Mov_CO> Mov_COes { get; set; }
        public virtual DbSet<Mov_CO_Interest> Mov_CO_Interests { get; set; }
        public virtual DbSet<Movement_CA> Movement_CAs { get; set; }
        public virtual DbSet<ObjetiveAccount> ObjetiveAccounts { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<Relationship> Relationships { get; set; }
        public virtual DbSet<SavingsAccount> SavingsAccounts { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TypeDocIdentity> TypeDocIdentities { get; set; }
        public virtual DbSet<TypeMovCO> TypeMovCOes { get; set; }
        public virtual DbSet<TypeMovCOInt> TypeMovCOInts { get; set; }
        public virtual DbSet<TypeMovement_CA> TypeMovement_CAs { get; set; }
        public virtual DbSet<TypeSavingsAccount> TypeSavingsAccounts { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserCanAccess> UserCanAccesses { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_Create_Coin(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Create_Coin", nameParameter);
        }
    
        public virtual int SP_Create_MovCO(Nullable<int> inTypeMovCO, Nullable<int> inObjetiveAccountId, Nullable<System.DateTime> inDateOfMovCO, Nullable<decimal> inFee)
        {
            var inTypeMovCOParameter = inTypeMovCO.HasValue ?
                new ObjectParameter("inTypeMovCO", inTypeMovCO) :
                new ObjectParameter("inTypeMovCO", typeof(int));
    
            var inObjetiveAccountIdParameter = inObjetiveAccountId.HasValue ?
                new ObjectParameter("inObjetiveAccountId", inObjetiveAccountId) :
                new ObjectParameter("inObjetiveAccountId", typeof(int));
    
            var inDateOfMovCOParameter = inDateOfMovCO.HasValue ?
                new ObjectParameter("inDateOfMovCO", inDateOfMovCO) :
                new ObjectParameter("inDateOfMovCO", typeof(System.DateTime));
    
            var inFeeParameter = inFee.HasValue ?
                new ObjectParameter("inFee", inFee) :
                new ObjectParameter("inFee", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Create_MovCO", inTypeMovCOParameter, inObjetiveAccountIdParameter, inDateOfMovCOParameter, inFeeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Create_Person(Nullable<int> inTypeDocId, string inName, Nullable<int> inValueDocIden, Nullable<System.DateTime> inDateOfBirth, string inEmail, string inPhone1, string inPhone2, ObjectParameter outResultCode)
        {
            var inTypeDocIdParameter = inTypeDocId.HasValue ?
                new ObjectParameter("inTypeDocId", inTypeDocId) :
                new ObjectParameter("inTypeDocId", typeof(int));
    
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            var inValueDocIdenParameter = inValueDocIden.HasValue ?
                new ObjectParameter("inValueDocIden", inValueDocIden) :
                new ObjectParameter("inValueDocIden", typeof(int));
    
            var inDateOfBirthParameter = inDateOfBirth.HasValue ?
                new ObjectParameter("inDateOfBirth", inDateOfBirth) :
                new ObjectParameter("inDateOfBirth", typeof(System.DateTime));
    
            var inEmailParameter = inEmail != null ?
                new ObjectParameter("inEmail", inEmail) :
                new ObjectParameter("inEmail", typeof(string));
    
            var inPhone1Parameter = inPhone1 != null ?
                new ObjectParameter("inPhone1", inPhone1) :
                new ObjectParameter("inPhone1", typeof(string));
    
            var inPhone2Parameter = inPhone2 != null ?
                new ObjectParameter("inPhone2", inPhone2) :
                new ObjectParameter("inPhone2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Create_Person", inTypeDocIdParameter, inNameParameter, inValueDocIdenParameter, inDateOfBirthParameter, inEmailParameter, inPhone1Parameter, inPhone2Parameter, outResultCode);
        }
    
        public virtual int SP_Create_Relationship(string inName)
        {
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Create_Relationship", inNameParameter);
        }
    
        public virtual int SP_Create_TypeDocIdentity(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Create_TypeDocIdentity", nameParameter);
        }
    
        public virtual int SP_Create_TypeMovCO(string inName)
        {
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Create_TypeMovCO", inNameParameter);
        }
    
        public virtual int SP_Create_TypeMovCOInt(string inName)
        {
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Create_TypeMovCOInt", inNameParameter);
        }
    
        public virtual int SP_Create_TypeMovementCA(string inName, string inTypeOP)
        {
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            var inTypeOPParameter = inTypeOP != null ?
                new ObjectParameter("inTypeOP", inTypeOP) :
                new ObjectParameter("inTypeOP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Create_TypeMovementCA", inNameParameter, inTypeOPParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_Delete_Coin(Nullable<int> inIdCoin)
        {
            var inIdCoinParameter = inIdCoin.HasValue ?
                new ObjectParameter("inIdCoin", inIdCoin) :
                new ObjectParameter("inIdCoin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Coin", inIdCoinParameter);
        }
    
        public virtual int SP_Delete_MovCO(Nullable<int> inId)
        {
            var inIdParameter = inId.HasValue ?
                new ObjectParameter("inId", inId) :
                new ObjectParameter("inId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_MovCO", inIdParameter);
        }
    
        public virtual int SP_Delete_Relationship(Nullable<int> inId)
        {
            var inIdParameter = inId.HasValue ?
                new ObjectParameter("inId", inId) :
                new ObjectParameter("inId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Relationship", inIdParameter);
        }
    
        public virtual int SP_Delete_TypeDocIdentity(Nullable<int> inID)
        {
            var inIDParameter = inID.HasValue ?
                new ObjectParameter("inID", inID) :
                new ObjectParameter("inID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_TypeDocIdentity", inIDParameter);
        }
    
        public virtual int SP_Delete_TypeMovCO(Nullable<int> inID)
        {
            var inIDParameter = inID.HasValue ?
                new ObjectParameter("inID", inID) :
                new ObjectParameter("inID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_TypeMovCO", inIDParameter);
        }
    
        public virtual int SP_Delete_TypeMovCOInt(Nullable<int> inID)
        {
            var inIDParameter = inID.HasValue ?
                new ObjectParameter("inID", inID) :
                new ObjectParameter("inID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_TypeMovCOInt", inIDParameter);
        }
    
        public virtual int SP_Delete_TypeMovementCA(Nullable<int> inID)
        {
            var inIDParameter = inID.HasValue ?
                new ObjectParameter("inID", inID) :
                new ObjectParameter("inID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_TypeMovementCA", inIDParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<string> SP_Read_Coin(Nullable<int> inIdCoin)
        {
            var inIdCoinParameter = inIdCoin.HasValue ?
                new ObjectParameter("inIdCoin", inIdCoin) :
                new ObjectParameter("inIdCoin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Read_Coin", inIdCoinParameter);
        }
    
        public virtual ObjectResult<SP_Read_MovCO_Result> SP_Read_MovCO(Nullable<int> inId)
        {
            var inIdParameter = inId.HasValue ?
                new ObjectParameter("inId", inId) :
                new ObjectParameter("inId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Read_MovCO_Result>("SP_Read_MovCO", inIdParameter);
        }
    
        public virtual ObjectResult<SP_Read_Person_Result> SP_Read_Person(Nullable<int> inValueDocId, ObjectParameter outResultCode)
        {
            var inValueDocIdParameter = inValueDocId.HasValue ?
                new ObjectParameter("inValueDocId", inValueDocId) :
                new ObjectParameter("inValueDocId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Read_Person_Result>("SP_Read_Person", inValueDocIdParameter, outResultCode);
        }
    
        public virtual ObjectResult<string> SP_Read_Relationship(Nullable<int> inId)
        {
            var inIdParameter = inId.HasValue ?
                new ObjectParameter("inId", inId) :
                new ObjectParameter("inId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Read_Relationship", inIdParameter);
        }
    
        public virtual ObjectResult<string> SP_Read_TypeDocIdentity(Nullable<int> inID)
        {
            var inIDParameter = inID.HasValue ?
                new ObjectParameter("inID", inID) :
                new ObjectParameter("inID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Read_TypeDocIdentity", inIDParameter);
        }
    
        public virtual ObjectResult<string> SP_Read_TypeMovCO(Nullable<int> inID)
        {
            var inIDParameter = inID.HasValue ?
                new ObjectParameter("inID", inID) :
                new ObjectParameter("inID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Read_TypeMovCO", inIDParameter);
        }
    
        public virtual ObjectResult<string> SP_Read_TypeMovCOInt(Nullable<int> inID)
        {
            var inIDParameter = inID.HasValue ?
                new ObjectParameter("inID", inID) :
                new ObjectParameter("inID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Read_TypeMovCOInt", inIDParameter);
        }
    
        public virtual ObjectResult<SP_Read_TypeMovementCA_Result> SP_Read_TypeMovementCA(Nullable<int> inID)
        {
            var inIDParameter = inID.HasValue ?
                new ObjectParameter("inID", inID) :
                new ObjectParameter("inID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Read_TypeMovementCA_Result>("SP_Read_TypeMovementCA", inIDParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int SP_Update_Coin(Nullable<int> inIdCoin, string inName)
        {
            var inIdCoinParameter = inIdCoin.HasValue ?
                new ObjectParameter("inIdCoin", inIdCoin) :
                new ObjectParameter("inIdCoin", typeof(int));
    
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Coin", inIdCoinParameter, inNameParameter);
        }
    
        public virtual int SP_Update_MovCO(Nullable<int> inId, Nullable<System.DateTime> inDateOfMov, Nullable<decimal> inFee)
        {
            var inIdParameter = inId.HasValue ?
                new ObjectParameter("inId", inId) :
                new ObjectParameter("inId", typeof(int));
    
            var inDateOfMovParameter = inDateOfMov.HasValue ?
                new ObjectParameter("inDateOfMov", inDateOfMov) :
                new ObjectParameter("inDateOfMov", typeof(System.DateTime));
    
            var inFeeParameter = inFee.HasValue ?
                new ObjectParameter("inFee", inFee) :
                new ObjectParameter("inFee", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_MovCO", inIdParameter, inDateOfMovParameter, inFeeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Update_Person(Nullable<int> inValueDocId, string inNewEmail, string inNewPhone1, string inNewPhone2, ObjectParameter outResultCode)
        {
            var inValueDocIdParameter = inValueDocId.HasValue ?
                new ObjectParameter("inValueDocId", inValueDocId) :
                new ObjectParameter("inValueDocId", typeof(int));
    
            var inNewEmailParameter = inNewEmail != null ?
                new ObjectParameter("inNewEmail", inNewEmail) :
                new ObjectParameter("inNewEmail", typeof(string));
    
            var inNewPhone1Parameter = inNewPhone1 != null ?
                new ObjectParameter("inNewPhone1", inNewPhone1) :
                new ObjectParameter("inNewPhone1", typeof(string));
    
            var inNewPhone2Parameter = inNewPhone2 != null ?
                new ObjectParameter("inNewPhone2", inNewPhone2) :
                new ObjectParameter("inNewPhone2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Update_Person", inValueDocIdParameter, inNewEmailParameter, inNewPhone1Parameter, inNewPhone2Parameter, outResultCode);
        }
    
        public virtual int SP_Update_Relationship(Nullable<int> inId, string inName)
        {
            var inIdParameter = inId.HasValue ?
                new ObjectParameter("inId", inId) :
                new ObjectParameter("inId", typeof(int));
    
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Relationship", inIdParameter, inNameParameter);
        }
    
        public virtual int SP_Update_TypeDocIdentity(Nullable<int> inID, string inName)
        {
            var inIDParameter = inID.HasValue ?
                new ObjectParameter("inID", inID) :
                new ObjectParameter("inID", typeof(int));
    
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_TypeDocIdentity", inIDParameter, inNameParameter);
        }
    
        public virtual int SP_Update_TypeMovCO(Nullable<int> inID, string inName)
        {
            var inIDParameter = inID.HasValue ?
                new ObjectParameter("inID", inID) :
                new ObjectParameter("inID", typeof(int));
    
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_TypeMovCO", inIDParameter, inNameParameter);
        }
    
        public virtual int SP_Update_TypeMovCOInt(Nullable<int> inID, string inName)
        {
            var inIDParameter = inID.HasValue ?
                new ObjectParameter("inID", inID) :
                new ObjectParameter("inID", typeof(int));
    
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_TypeMovCOInt", inIDParameter, inNameParameter);
        }
    
        public virtual int SP_Update_TypeMovementCA(Nullable<int> inID, string inName, string inTypeOP)
        {
            var inIDParameter = inID.HasValue ?
                new ObjectParameter("inID", inID) :
                new ObjectParameter("inID", typeof(int));
    
            var inNameParameter = inName != null ?
                new ObjectParameter("inName", inName) :
                new ObjectParameter("inName", typeof(string));
    
            var inTypeOPParameter = inTypeOP != null ?
                new ObjectParameter("inTypeOP", inTypeOP) :
                new ObjectParameter("inTypeOP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_TypeMovementCA", inIDParameter, inNameParameter, inTypeOPParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
