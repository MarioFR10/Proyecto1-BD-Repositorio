//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto1_BD.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class SavingsAccount
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public SavingsAccount()
        {
            this.AccountStatement = new HashSet<AccountStatement>();
            this.Movement_CA = new HashSet<Movement_CA>();
            this.ObjetiveAccount = new HashSet<ObjetiveAccount>();
        }
    
        public int Id { get; set; }
        public int TypeSavingsAccountId { get; set; }
        public int PersonId { get; set; }
        public int UserCanAccessId { get; set; }
        public decimal Balance { get; set; }
        public System.DateTime CreationDate { get; set; }
        public string AccountNumber { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AccountStatement> AccountStatement { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Movement_CA> Movement_CA { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ObjetiveAccount> ObjetiveAccount { get; set; }
        public virtual Person Person { get; set; }
        public virtual TypeSavingsAccount TypeSavingsAccount { get; set; }
        public virtual UserCanAccess UserCanAccess { get; set; }
    }
}
